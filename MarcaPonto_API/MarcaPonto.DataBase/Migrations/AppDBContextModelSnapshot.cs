// <auto-generated />
using MarcaPonto.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarcaPonto.DataBase.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("MarcaPonto.Model.Ponto.Ponto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataCadastro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ponto");

                    b.HasData(
                        new
                        {
                            Id = "67cdcc76-b4df-4267-949b-c839b6dd4db6",
                            Active = true,
                            DataCadastro = "24/10/2022 22:08:45",
                            UserId = "305bb669-59ec-4b6c-b718-2a2c3a71bdc3",
                            UserName = "Customer 01"
                        });
                });

            modelBuilder.Entity("MarcaPonto.Model.Users.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = "305bb669-59ec-4b6c-b718-2a2c3a71bdc3",
                            CPF = "1234567890",
                            Email = "Customer1@email.com",
                            Name = "Customer 01",
                            Password = "customer01",
                            Role = "Customer"
                        },
                        new
                        {
                            Id = "0ea7327d-1e33-4a11-ae68-235cb4ed1690",
                            CPF = "2234567890",
                            Email = "Customer2@email.com",
                            Name = "Customer 02",
                            Password = "customer02",
                            Role = "Customer"
                        },
                        new
                        {
                            Id = "6a6f7207-b85e-4fb1-a356-cf36e6eb3095",
                            CPF = "3234567890",
                            Email = "Customer3@email.com",
                            Name = "Customer 03",
                            Password = "customer03",
                            Role = "Customer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
